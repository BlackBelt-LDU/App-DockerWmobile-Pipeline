name: Publish menidx to GCR
# create simple trigger based on everytime we make change to this repository
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#define jobs
jobs:
  Deploy:
    runs-on: ubuntu-latest #run this workflow on ubuntu instance
    permissions: #make sure we add permission to read and write package
      contents: read
      packages: write
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 #checkouts your repo, so this workflow can access it

      - name: Checkout docker-mendix-buildpack
        uses: actions/checkout@v3
        with:
          repository: mendix/docker-mendix-buildpack

      - name: Checkout mendix app
        uses: actions/checkout@v3
        with:
          repository: BlackBelt-LDU/App-DockerWmobile
          path: project

      - name: Login to GCR
        env:
          PROJECT_ID: 	bb-ldu #create env called PROJECT_ID consisted of our actual GCP Project ID
        uses: google-github-actions/setup-gcloud@v0.3.0 #checkouts GCR repo, so this workflow can access it
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} #parse the value of repository secret called SERVICE_ACCOUNT_KEY that we have created earlier
          project_id: ${{ env.PROJECT_ID }} #parse the value of env called PROJECT_ID
          export_default_credentials: true
          
      - name: Build Docker Image
        env:
          IMAGE_NAME: App-DockerWmobile #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
          PROJECT_ID: 	bb-ldu
        run: docker build -t $IMAGE_NAME:latest . #build the docker image

      - name: Configure Docker Client
        run:  |-
          gcloud auth configure-docker --quiet #authenticate to gcr


      - name: Push Docker Image to Container Registry GCR
        env: 
          IMAGE_NAME: App-DockerWmobile
          PROJECT_ID: bb-ldu
        #tag docker image to gcr image format then push to gcr
        run: |-
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest 
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest 
    